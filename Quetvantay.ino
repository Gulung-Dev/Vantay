#include <Adafruit_Fingerprint.h>
#include <SoftwareSerial.h>

SoftwareSerial mySerial(2, 3);
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

bool hasFinger = false; // Tr·∫°ng th√°i v√¢n tay tr∆∞·ªõc ƒë√≥

void setup() {
    Serial.begin(9600);
    Serial.println("C·∫£m bi·∫øn v√¢n tay AS608 - ƒê·ªçc li√™n t·ª•c");

    finger.begin(57600);
    if (finger.verifyPassword()) {
        Serial.println("K·∫øt n·ªëi c·∫£m bi·∫øn th√†nh c√¥ng!");
    } else {
        Serial.println("L·ªói! Kh√¥ng t√¨m th·∫•y c·∫£m bi·∫øn v√¢n tay!");
        while (1);
    }
}

void loop() {
    uint8_t p = finger.getImage();

    if (p == FINGERPRINT_OK) {
        if (!hasFinger) {
            Serial.println("üìç Ph√°t hi·ªán v√¢n tay! ƒêang x·ª≠ l√Ω...");
        }
        hasFinger = true;
        processFingerprint();
    } 
    else if (p == FINGERPRINT_NOFINGER) {
        if (hasFinger) {
            Serial.println("‚ùå Kh√¥ng c√≤n v√¢n tay.");
        }
        hasFinger = false;
    }

    delay(300); // Gi·∫£m t·∫£i CPU, tr√°nh spam
}

void processFingerprint() {
    uint8_t p = finger.image2Tz();
    if (p == FINGERPRINT_OK) {
        Serial.println("‚úÖ ·∫¢nh v√¢n tay h·ª£p l·ªá, ƒëang t√¨m ki·∫øm...");
    } else if (p == FINGERPRINT_IMAGEMESS) {
        Serial.println("‚ö† ·∫¢nh v√¢n tay qu√° m·ªù, th·ª≠ l·∫°i!");
        return;
    } else {
        return; // Kh√¥ng in th√¥ng b√°o l·ªói kh√¥ng c·∫ßn thi·∫øt
    }

    p = finger.fingerSearch();
    if (p == FINGERPRINT_OK) {
        Serial.print("üéØ T√¨m th·∫•y ID: "); 
        Serial.print(finger.fingerID);
        Serial.print(" - ƒê·ªô tin c·∫≠y: ");
        Serial.println(finger.confidence);
    } else {
        Serial.println("‚ùå Kh√¥ng t√¨m th·∫•y trong c∆° s·ªü d·ªØ li·ªáu.");
    }
}
